<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ejjumo.playlist.dao.PlaylistDAO">
    <insert id="insert" parameterType="Playlist" useGeneratedKeys="true" keyProperty="playlistId" keyColumn="playlist_id">
        insert into playlist (user_id, playlist_name, description, created_at, updated_at)
        values (#{userId}, #{playlistName}, #{description}, now(), now())
    </insert>

    <update id="update" parameterType="Playlist">
        update playlist set playlist_name=#{playlistName}, description=#{description}, updated_at=now()
        where playlist_id=#{playlistId}
    </update>

    <insert id="insertThumbsUp" parameterType="int">
        insert into thumbsup (playlist_id, user_id, is_thumbsup)
        values (#{playlistId}, #{userId}, 1)
        on duplicate key update is_thumbsup=1-is_thumbsup;
    </insert>

    <update id="updateThumbsUp" parameterType="int">
        update playlist
        set thumbs = (
               select count(*) from thumbsUp where playlist_id = #{playlistId} and is_thumbsup = 1
        ) where playlist_id = #{playlistId}
    </update>

    <select id="checkThumbsUp" parameterType="int"
            resultType="int">
        select count(*) from thumbsup where playlist_id=#{playlistId} and user_id=#{userId} and is_thumbsup=1
    </select>

    <delete id="delete" parameterType="int">
        delete from playlist where playlist_id=#{playlistId}
    </delete>

    <select id="select" parameterType="int"
            resultType="PlaylistDetail">
        select p.playlist_id playlistId, u.user_id userId, user_name userName, playlist_name playlistName, description, thumbs, (
            select count(*) from comment c where c.playlist_id=p.playlist_id
        ) comments, (
            select is_thumbsup from thumbsup t where p.playlist_id=t.playlist_id and t.user_id=3
        ) isThumbsup, (
            select thumbnail from song s where s.playlist_id=p.playlist_id limit 1
        ) thumbnail
        from playlist p, user u
        where p.user_id=u.user_id and p.playlist_id=#{playlistId};
    </select>

    <select id="selectAll" resultType="Playlist">
        select playlist_id playlistId, user_id userId, playlist_name playlistName, description, thumbs, created_at createdAt, updated_at updatedAt
        from playlist
        order by thumbs desc
    </select>

    <select id="selectByUserId" parameterType="int"
            resultType="Playlist">
        select playlist_id playlistId, user_id userId, playlist_name playlistName, description, thumbs, created_at createdAt, updated_at updatedAt
        from playlist
        where user_id=#{userId}
        order by updated_at desc
    </select>
</mapper>











